options
{
	JDK_VERSION = "1.7";
	static = false;
}

PARSER_BEGIN(RPLanguage)
public class RPLanguage
{
}
PARSER_END(RPLanguage)

TOKEN_MGR_DECLS:
{
}

SKIP:{
  "\r"
| "\n"
| "\t"
| " "
| <"//"(~["\n","\r"])*("\n"|"\r") >								/*commento su singola linea*/}

/*LO SKIP DEL COMMENTO MULTILINEA AVVIENE MEDIANE PASSAGGIO DI STATO LESSICALE*/
SKIP:
{
  < "/*" > : IN_COMMENTO
}
<IN_COMMENTO>
SKIP:
{
  < "*/" >: DEFAULT
| < ~[] > 
}
/*----------------------------------------------------------------------------*/

TOKEN:
{
  < #L: ["A"-"Z","a"-"z"] >												/*lettere*/

| < #N: ["0"-"9"] >														/*numeri*/

| < PV: ";" >															/*punto e virgola*/

| < EPS: "eps" >														/*epslon*/

| < PIPE: "|">															/*pipe*/

| < PUO_ESSERE: "::="|"->" >							   				/*puo essere*/

| < OPZ_NON_TERM : "["<NON_TERM>"]">									/*non terminale opzionale*/

| < NON_TERM: "<"(~["\n","\r","\t","<",">","|"," "])+">" >				/*simboli non terminali*/

| < OPZ_TERM : "["<TERM>"]">											/*terminale opzionale*/

| < TERM: (~["\n","\r","\t","<",">","|"," ",":","=","[","]","/", ";"])+>/*simboli terminali*/

//| < COMMENTO_M: "/*"(~[])*"*/" >										/*commento multilinea*/										   								
}
