//------------------------------------------------REGOLE SINTATTICHE PER LA GRAMMATICA DELLE REGOLE SINTATTICHE

/*Una grammatica è un insieme di regole*/

	<grammatica> ::= <regole>;

/*Una insieme di regole può essere una singola regola
 *oppure una regola seguita da un insieme di regole.*/
 
	<regole> ::= <regola> | <regola> <regole>;

/*Una regola può cominciare con l'indicazione di un determinato
 *numero di simboli di loockahead necessari al parser generato
 dal compilatore "JavaCC".
 La parte sinistra della regola (testa) è un simbolo non terminale
 della grammatica. A seguire vi è il simbolo "può essere" che rappresenta
 il confine tra la testa ed il corpo della regola di produzione.
 Successivamente vi è il "corpo" (parte destra della regola di produzione).
 In fine il simbolo "punto e virgola" rappresenta la terminazione della regola.*/
	
	<regola> ::= [LOOCKAHEAD] NON_TERM PUO_ESSERE <corpo> PV;

/*Il corpo di una regola di produzione può essere un insieme di elementi
 *oppure un insieme di elementi seguiti dal simbolo "pipe" e da un altro corpo.*/
 
	<corpo> ::= <elementi> | <elementi> PIPE <corpo>;

/*Un insieme di elementi di una regola di produzione possono essere un singolo
 *elemento oppure un elemento concatenato ad un insieme di elementi.
 In fine gli elementi di una regola possono essere opzionali*/
	
	<elementi> ::= <elemento> | <elemento> <elementi> | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q <elementi>;
	<elementi_opz> ::= <elemento> | <elemento> <elementi>;

/*Un elemento di una regola di produzione può essere un simbolo terminale o
  un simbolo non terminale, oppure un simbolo terminale, o non terminale, opzionale, o "epsilon"*/
	
	<elemento> ::= TERM | NON_TERM | eps;
	

//-----------------------------------------------------------------------------------------------FATTORIZZAZIONI

/*-------------------------------------------------------------------------1) 
 *Bisogna fattorizzare la regola di produzione seguente:*/

	<regole> ::= <regola> | <regola> <regole>;

/*Mettiamo a fattor comune il non terminale "<regola>", ottenendo:*/

	<regole> ::= <regola> <regola_queue>;
	<regola_queue> ::= <regole> | eps;
	
/*-------------------------------------------------------------------------2)
 *Bisogna fattorizzare la regola di produzione seguente:*/

	<corpo> ::= <elementi> | <elementi> PIPE <corpo>;

/*Mettiamo a fattor comune il non terminale "<elementi>", ottenendo:*/

	<corpo> ::= <elementi> <elementi_queue>;
	<elementi_queue> ::= PIPE <corpo> | eps;

/*-------------------------------------------------------------------------3)
 *Bisogna fattorizzare la regola di produzione seguente:*/

	<elementi> ::= <elemento> | <elemento> <elementi> | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q <elementi>;
	<elementi_opz> ::= <elemento> | <elemento> <elementi>;

/*Mettiamo a fattor comune il non terminale "<elemento>", della derivazione di "<elementi>", ottenendo:*/

	<elementi> ::= <elemento> <elemento_queue> | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q <elementi>;
	<elemento_queue> ::= <elementi> | eps;
	
/*Mettiamo a fattor comune "PARAPERTA_Q <elementi> PARCHIUSA_Q", ottenendo:*/

	<elementi> ::= <elemento> <elemento_queue> | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q <elemento_queue>;
	<elemento_queue> ::= <elementi> | eps;
	<elementi_opz> ::= <elemento> | <elemento> <elementi>;
	
/*Mettiamo a fattor comune il non terminale "<elemento>", della derivazione di "<elementi_opz>", ottenendo:*/
	
	<elementi> ::= <elemento> <elemento_queue> | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q <elemento_queue>;
	<elementi_opz> ::= <elemento> <elemento_queue>;
	<elemento_queue> ::= <elementi> | eps;
	
/*------------------------------------------------------------------RISULTATO

	<grammatica> ::= <regole>;
	
	<regole> ::= <regola> <regola_queue>;
	<regola_queue> ::= <regole> | eps;
	
	<regola> ::= [LOOKAHEAD] NON_TERM PUO_ESSERE <corpo> PV;
	
	<corpo> ::= <elementi> <elementi_queue>;
	<elementi_queue> ::= PIPE <corpo> | eps;
	
	<elementi> ::= <elemento> <elemento_queue> | PARAPERTA_Q <elementi_opz> PARCHIUSA_Q <elemento_queue>;
	<elementi_opz> ::= <elemento> <elemento_queue>;
	<elemento_queue> ::= <elementi> | eps;
	
	<elemento> ::= TERM | NON_TERM | eps;
 